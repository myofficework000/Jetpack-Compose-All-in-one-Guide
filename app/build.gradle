plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.apollographql.apollo3'
    id 'com.google.firebase.crashlytics'
    id("org.jetbrains.kotlin.plugin.compose") version "2.2.0"
}

android {
    namespace 'com.example.jetpack_compose_all_in_one'
    compileSdk 35

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def mapApi = properties.getProperty("GOOGLE_MAPS_API_KEY")
    def stripeUrl = properties.getProperty("STRIPE_BACKEND_BASEURL")

    defaultConfig {
        applicationId "com.example.jetpack_compose_all_in_one"
        minSdk 29
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        resValue "string", "GOOGLE_MAPS_API_KEY", "\"$mapApi\""
        resValue "string", "STRIPE_BACKEND_BASEURL", "\"$stripeUrl\""
    }

    configurations {
        all*.exclude module: 'bcprov-jdk15on'
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += 'META-INF/*'
        }
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    apollo {
        // instruct the compiler to generate Kotlin models
        generateKotlinModels.set(true)
        packageNamesFromFilePaths()

        service("spacex") {
            packageName.set("com.example.jetpack_compose_all_in_one")
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.9.2'
    implementation 'androidx.activity:activity-compose:1.10.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.navigation:navigation-compose:$compose_version"
    implementation platform('androidx.compose:compose-bom:2025.07.00')
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.material3:material3"
    implementation 'androidx.work:work-runtime-ktx:2.10.3'
    implementation 'com.google.firebase:firebase-database-ktx:21.0.0'
    implementation 'com.google.firebase:firebase-messaging-ktx:24.1.2'
    implementation 'com.google.accompanist:accompanist-permissions:0.37.3'
    implementation 'com.google.firebase:firebase-auth-ktx:23.2.1'
    implementation 'com.google.android.libraries.places:places:4.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.test.ext:junit-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.google.accompanist:accompanist-webview:0.36.0'
    implementation platform('androidx.compose:compose-bom:2025.07.00')
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.benchmark:benchmark-macro:1.4.0'
    implementation 'com.google.firebase:firebase-firestore:26.0.0'
    implementation "androidx.biometric:biometric:1.2.0-alpha05"
    implementation platform('androidx.compose:compose-bom:2025.07.00')
    implementation 'androidx.media3:media3-exoplayer:1.8.0'
    implementation 'androidx.media3:media3-ui:1.8.0'
    implementation 'com.google.firebase:firebase-crashlytics:20.0.0'
//    implementation 'com.google.android.ads:mediation-test-suite:3.0.0'


    testImplementation 'junit:junit:4.13.2'
    testImplementation 'io.mockk:mockk:1.14.5'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.10.2'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'

    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation platform('androidx.compose:compose-bom:2025.07.00')
    androidTestImplementation "io.mockk:mockk-android:1.14.5"
    androidTestImplementation "io.mockk:mockk-agent:1.14.5"
    androidTestImplementation platform('androidx.compose:compose-bom:2025.07.00')
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:3.0.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.1.0'
    //Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.15.2'
    implementation "com.squareup.retrofit2:converter-moshi:3.0.0"

    //Convertor factory by Gson
    implementation 'com.squareup.retrofit2:converter-gson:3.0.0'

    // RxJava 2
    implementation "io.reactivex.rxjava2:rxjava:2.2.21"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    //RxJava2 with Retrofit
    implementation "com.squareup.retrofit2:adapter-rxjava2:3.0.0"

    // Glide with compose
    implementation "com.github.bumptech.glide:compose:1.0.0-beta01"

    //Hilt dependency
    implementation 'com.google.dagger:hilt-android:2.57'
    kapt 'com.google.dagger:hilt-android-compiler:2.57'
    kapt "androidx.hilt:hilt-compiler:1.2.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.2.0'

    // ktx activity with view model injection
    implementation 'androidx.activity:activity-ktx:1.10.1'

    //compose with liveData
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"

    // Room database
    kapt 'androidx.room:room-compiler:2.7.2'
    implementation 'androidx.room:room-runtime:2.7.2'

    // Coil
    implementation("io.coil-kt:coil-compose:2.7.0")

    //landscape - glide for compose
    implementation "com.github.skydoves:landscapist-glide:2.5.1"

    implementation 'com.google.maps.android:maps-compose:6.7.0'
    implementation 'com.google.android.gms:play-services-maps:19.2.0'

    // LiveData
    // implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.9.2'
    implementation 'com.google.android.gms:play-services-location:21.3.0'

    // camera with ml-kit
    def camerax_version = "1.3.0-alpha07"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation 'com.google.mlkit:barcode-scanning:17.3.0'

    // Compose Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.1"

    testImplementation 'androidx.arch.core:core-testing:2.2.0'

    //Lottie
    implementation "com.airbnb.android:lottie-compose:6.6.7"

    //Secured Shared Preference
    implementation "androidx.security:security-crypto:1.1.0"
    implementation "androidx.security:security-identity-credential:1.0.0-alpha03"
    implementation "androidx.security:security-crypto-ktx:1.1.0"

    // Stripe
    implementation "com.stripe:stripe-android:21.22.1"

    // paging
    def paging_version = "3.0.0"

    implementation "androidx.paging:paging-runtime:$paging_version"

    // alternatively - without Android dependencies for tests
    testImplementation "androidx.paging:paging-common:$paging_version"

    // Jetpack Compose Integration
    implementation "androidx.paging:paging-compose:3.3.6"

    //Graph QL
    implementation 'com.apollographql.apollo3:apollo-runtime:3.8.6'

    testImplementation("org.mockito:mockito-core:5.18.0")
    testImplementation ("app.cash.turbine:turbine:1.2.1")

    // Data Store
    implementation ("androidx.datastore:datastore-preferences:1.1.7")
}

// Remember to add this to local.properties
// GOOGLE_MAPS_API_KEY=<Get API Key from someone. It starts with "AIza">
secrets {
    defaultPropertiesFileName = 'local.properties.defaults'
}
